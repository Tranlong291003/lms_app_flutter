import 'package:flutter/material.dart';
import 'package:lms/apps/utils/customAppBar.dart';
import 'package:lms/apps/utils/custom_snackbar.dart';

class LanguageScreen extends StatefulWidget {
  const LanguageScreen({super.key});

  @override
  State<LanguageScreen> createState() => _LanguageScreenState();
}

class _LanguageScreenState extends State<LanguageScreen> {
  final String _selectedLanguage = 'vi';

  final List<Map<String, dynamic>> _languages = [
    {'code': 'vi', 'name': 'Ti·∫øng Vi·ªát', 'flag': 'üáªüá≥'},
    {'code': 'en', 'name': 'English', 'flag': 'üá¨üáß'},
    {'code': 'zh', 'name': '‰∏≠Êñá', 'flag': 'üá®üá≥'},
    {'code': 'ja', 'name': 'Êó•Êú¨Ë™û', 'flag': 'üáØüáµ'},
    {'code': 'ko', 'name': 'ÌïúÍµ≠Ïñ¥', 'flag': 'üá∞üá∑'},
    {'code': 'fr', 'name': 'Fran√ßais', 'flag': 'üá´üá∑'},
    {'code': 'de', 'name': 'Deutsch', 'flag': 'üá©üá™'},
    {'code': 'es', 'name': 'Espa√±ol', 'flag': 'üá™üá∏'},
    {'code': 'it', 'name': 'Italiano', 'flag': 'üáÆüáπ'},
    {'code': 'ru', 'name': '–†—É—Å—Å–∫–∏–π', 'flag': 'üá∑üá∫'},
    {'code': 'ar', 'name': 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', 'flag': 'üá∏üá¶'},
    {'code': 'pt', 'name': 'Portugu√™s', 'flag': 'üáµüáπ'},
    {'code': 'hi', 'name': '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä', 'flag': 'üáÆüá≥'},
    {'code': 'th', 'name': '‡πÑ‡∏ó‡∏¢', 'flag': 'üáπüá≠'},
    {'code': 'id', 'name': 'Bahasa Indonesia', 'flag': 'üáÆüá©'},
    {'code': 'ms', 'name': 'Bahasa Melayu', 'flag': 'üá≤üáæ'},
    {'code': 'tr', 'name': 'T√ºrk√ße', 'flag': 'üáπüá∑'},
    {'code': 'pl', 'name': 'Polski', 'flag': 'üáµüá±'},
    {'code': 'nl', 'name': 'Nederlands', 'flag': 'üá≥üá±'},
    {'code': 'sv', 'name': 'Svenska', 'flag': 'üá∏üá™'},
    {'code': 'no', 'name': 'Norsk', 'flag': 'üá≥üá¥'},
    {'code': 'fi', 'name': 'Suomi', 'flag': 'üá´üáÆ'},
    {'code': 'da', 'name': 'Dansk', 'flag': 'üá©üá∞'},
    {'code': 'cs', 'name': 'ƒåe≈°tina', 'flag': 'üá®üáø'},
    {'code': 'ro', 'name': 'Rom√¢nƒÉ', 'flag': 'üá∑üá¥'},
    {'code': 'hu', 'name': 'Magyar', 'flag': 'üá≠üá∫'},
    {'code': 'el', 'name': 'ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨', 'flag': 'üá¨üá∑'},
    {'code': 'he', 'name': '◊¢◊ë◊®◊ô◊™', 'flag': 'üáÆüá±'},
    {'code': 'ur', 'name': 'ÿßÿ±ÿØŸà', 'flag': 'üáµüá∞'},
    {'code': 'bn', 'name': '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ', 'flag': 'üáßüá©'},
    {'code': 'ta', 'name': '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç', 'flag': 'üáÆüá≥'},
  ];

  void _onLanguageSelected(String code) {
    if (code != _selectedLanguage) {
      CustomSnackBar.showInfo(
        context: context,
        message: 'Ch·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn',
      );
      // N·∫øu mu·ªën update ngay khi ch·ªçn:
      // setState(() {
      //   _selectedLanguage = code;
      // });
    }
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final colorScheme = theme.colorScheme;

    return Scaffold(
      appBar: CustomAppBar(title: 'Ng√¥n ng·ªØ', showBack: true),
      body: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
        child: Card(
          elevation: 4,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16),
          ),
          child: ClipRRect(
            borderRadius: BorderRadius.circular(16),
            child: ListView.separated(
              padding: EdgeInsets.zero,
              itemCount: _languages.length,
              separatorBuilder:
                  (_, __) => Divider(
                    height: 1,
                    color: Colors.grey.shade300,
                    indent: 16,
                    endIndent: 16,
                  ),
              itemBuilder: (context, index) {
                final lang = _languages[index];
                final isSelected = lang['code'] == _selectedLanguage;

                return RadioListTile<String>(
                  value: lang['code'],
                  groupValue: _selectedLanguage,
                  onChanged: (value) {
                    if (value != null) _onLanguageSelected(value);
                  },
                  title: Padding(
                    padding: const EdgeInsets.symmetric(vertical: 10),
                    child: Text(
                      lang['name'],
                      style: theme.textTheme.titleMedium?.copyWith(
                        fontWeight: FontWeight.w600,
                      ),
                    ),
                  ),
                  secondary: Padding(
                    padding: const EdgeInsets.only(right: 8),
                    child: Text(
                      lang['flag'],
                      style: const TextStyle(fontSize: 28),
                    ),
                  ),
                  activeColor: colorScheme.primary,
                  contentPadding: const EdgeInsets.symmetric(horizontal: 24),
                  toggleable: false,
                );
              },
            ),
          ),
        ),
      ),
      bottomNavigationBar: Container(
        color: theme.scaffoldBackgroundColor,
        padding: const EdgeInsets.fromLTRB(16, 12, 16, 24),
        child: ElevatedButton(
          onPressed: () {
            CustomSnackBar.showInfo(
              context: context,
              message: 'Ch·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn',
            );
          },
          style: ElevatedButton.styleFrom(
            backgroundColor: colorScheme.primary,
            foregroundColor: colorScheme.onPrimary,
            padding: const EdgeInsets.symmetric(vertical: 18),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(14),
            ),
            elevation: 4,
          ),
          child: const Text(
            '√Åp d·ª•ng',
            style: TextStyle(fontWeight: FontWeight.bold, fontSize: 18),
          ),
        ),
      ),
    );
  }
}
