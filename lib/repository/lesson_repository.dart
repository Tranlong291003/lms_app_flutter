import 'package:dio/dio.dart';
import 'package:lms/models/lesson_model.dart';
import 'package:lms/services/lesson_service.dart';

class LessonRepository {
  final LessonService _lessonService;

  LessonRepository({LessonService? lessonService})
    : _lessonService = lessonService ?? LessonService();

  Future<Response> getAllLessons({
    required int courseId,
    required String userUid,
  }) async {
    try {
      return await _lessonService.getAllLessons(
        courseId: courseId,
        userUid: userUid,
      );
    } catch (e) {
      throw Exception('Kh√¥ng th·ªÉ l·∫•y danh s√°ch b√†i h·ªçc: $e');
    }
  }

  Future<Lesson> getLessonDetail(int lessonId) async {
    try {
      return await _lessonService.getLessonDetail(lessonId);
    } catch (e) {
      throw Exception('Kh√¥ng th·ªÉ l·∫•y th√¥ng tin b√†i h·ªçc: $e');
    }
  }

  Future<void> completeLesson(
    int lessonId,
    String userUid,
    int courseId,
  ) async {
    try {
      print(
        '[LessonRepository] ‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu g·ªçi service ƒë·ªÉ ƒë√°nh d·∫•u b√†i h·ªçc ho√†n th√†nh',
      );
      print('[LessonRepository] üìù LessonId: $lessonId');
      print('[LessonRepository] üìù UserUid: $userUid');
      print('[LessonRepository] üìù CourseId: $courseId');

      await _lessonService.completeLesson(lessonId, userUid, courseId);

      print('[LessonRepository] ‚úÖ ƒê√£ ƒë√°nh d·∫•u b√†i h·ªçc ho√†n th√†nh th√†nh c√¥ng');
    } catch (e) {
      print('[LessonRepository] ‚ùå L·ªói khi ƒë√°nh d·∫•u b√†i h·ªçc ho√†n th√†nh: $e');
      throw Exception('Kh√¥ng th·ªÉ ƒë√°nh d·∫•u b√†i h·ªçc ƒë√£ ho√†n th√†nh: $e');
    }
  }
}
