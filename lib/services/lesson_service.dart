import 'package:dio/dio.dart';
import 'package:lms/apps/config/api_config.dart';
import 'package:lms/models/lesson_model.dart';

import 'base_service.dart';

class LessonService extends BaseService {
  LessonService({super.token});

  /// L·∫•y danh s√°ch t·∫•t c·∫£ b√†i h·ªçc c·ªßa kh√≥a h·ªçc
  Future<Response> getAllLessons({
    required int courseId,
    required String userUid,
  }) async {
    try {
      final url = ApiConfig.getLessonsByCourseAndUser(courseId, userUid);
      print('[LessonService] ‚ñ∂Ô∏è GET $url');
      final response = await get(url);
      print(
        '[LessonService] ‚úÖ ${response.statusCode} - data: ${response.data}',
      );
      return response;
    } on DioException catch (e) {
      print(
        '[LessonService] ‚ùå DIO ERROR status=${e.response?.statusCode} - message=${e.message}',
      );
      rethrow;
    } catch (e) {
      print('[LessonService] ‚ùå UNEXPECTED ERROR - $e');
      rethrow;
    }
  }

  /// L·∫•y chi ti·∫øt b√†i h·ªçc
  Future<Lesson> getLessonDetail(int lessonId) async {
    try {
      final url = ApiConfig.getLessonDetail(lessonId);
      print('[LessonService] ‚ñ∂Ô∏è GET $url');
      final response = await get(url);
      print(
        '[LessonService] ‚úÖ ${response.statusCode} - data: ${response.data}',
      );

      if (response.statusCode == 200) {
        try {
          final data = response.data['data'];
          if (data == null) {
            throw Exception('Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu b√†i h·ªçc');
          }
          return Lesson.fromJson(data);
        } catch (e) {
          print('[LessonService] ‚ùå PARSE ERROR - $e');
          throw Exception('D·ªØ li·ªáu b√†i h·ªçc kh√¥ng h·ª£p l·ªá: $e');
        }
      } else {
        throw Exception('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin b√†i h·ªçc');
      }
    } on DioException catch (e) {
      print(
        '[LessonService] ‚ùå DIO ERROR status=${e.response?.statusCode} - message=${e.message}',
      );
      throw Exception('L·ªói k·∫øt n·ªëi: ${e.message}');
    } catch (e) {
      print('[LessonService] ‚ùå UNEXPECTED ERROR - $e');
      throw Exception('L·ªói kh√¥ng x√°c ƒë·ªãnh: $e');
    }
  }

  Future<void> completeLesson(
    int lessonId,
    String userUid,
    int courseId,
  ) async {
    try {
      // URL kh√¥ng c√≥ tham s·ªë
      final url = ApiConfig.completeLesson;
      print('========== COMPLETE LESSON REQUEST ==========');
      print('[LessonService] ‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu ƒë√°nh d·∫•u b√†i h·ªçc ho√†n th√†nh');
      print('[LessonService] üìù URL: $url');
      print('[LessonService] üìù Method: POST');
      print(
        '[LessonService] üìù Body: { "lessonId": $lessonId, "userUid": "$userUid", "courseId": $courseId }',
      );
      print('============================================');

      // Truy·ªÅn t·∫•t c·∫£ tham s·ªë trong body
      final response = await post(
        url,
        data: {'lessonId': lessonId, 'userUid': userUid, 'courseId': courseId},
        options: Options(contentType: Headers.jsonContentType),
      );

      print('========== COMPLETE LESSON RESPONSE ==========');
      print('[LessonService] ‚úÖ Response status: ${response.statusCode}');
      print('[LessonService] ‚úÖ Response data: ${response.data}');
      print('=============================================');

      if (response.statusCode == 200) {
        print('[LessonService] üéâ ƒê√°nh d·∫•u b√†i h·ªçc ho√†n th√†nh th√†nh c√¥ng');
      } else {
        print(
          '[LessonService] ‚ö†Ô∏è Response kh√¥ng th√†nh c√¥ng: ${response.statusCode}',
        );
        throw Exception(
          'ƒê√°nh d·∫•u b√†i h·ªçc kh√¥ng th√†nh c√¥ng: ${response.statusCode}',
        );
      }
    } on DioException catch (e) {
      print('========== COMPLETE LESSON ERROR ==========');
      print('[LessonService] ‚ùå DIO ERROR:');
      print('[LessonService] ‚ùå Status: ${e.response?.statusCode}');
      print('[LessonService] ‚ùå Message: ${e.message}');
      print('[LessonService] ‚ùå Data: ${e.response?.data}');
      print('[LessonService] ‚ùå Request: ${e.requestOptions.uri}');
      print('[LessonService] ‚ùå Headers: ${e.requestOptions.headers}');
      print('==========================================');
      throw Exception('L·ªói k·∫øt n·ªëi: ${e.message}');
    } catch (e) {
      print('========== COMPLETE LESSON ERROR ==========');
      print('[LessonService] ‚ùå UNEXPECTED ERROR:');
      print('[LessonService] ‚ùå Error: $e');
      print('==========================================');
      throw Exception('Kh√¥ng th·ªÉ ƒë√°nh d·∫•u b√†i h·ªçc ƒë√£ ho√†n th√†nh: $e');
    }
  }
}
